{"version":3,"sources":["script.js"],"names":["jarallax","document","querySelectorAll","speed","isMobile","window","innerWidth","querySelector","appScrollBar","Scrollbar","init","$app","ScrollTrigger","scrollerProxy","scrollTop","value","arguments","length","getBoundingClientRect","top","left","width","height","innerHeight","refresh","scrollTopPos","addEventListener","scrollY","addListener","setTimeout","blocks","forEach","call","classList","add","$item","onScroll","offsetHeight","contains","remove","swiper","Swiper","centeredSlides","spaceBetween","el","slidesPerView","navigation","lazy","nextEl","prevEl","pagination","grabCursor","effect","translate","creativeEffect","prev","shadow","opacity","accordions","openAccordion","content","accordion","maxHeight","style","intro","closeAccordion","buttons","button","toggle","showMoreText","console","log","svg4everybody","text","parentElement","previousElementSibling","scrollHeight"],"mappings":"aAAAA,SAAAC,SAAAC,iBAAA,aAAA,CAGCC,OAAQ,KACT,IAAEC,SAAAC,OAAAC,WAAA,KAEF,IAAMF,SAAWC,CACjB,IAAKD,KAAQH,SAAEM,cAAA,mBAGbF,OAAOG,aAAeC,UAAUC,KAAKC,MACrCC,cAAcC,cAAcF,KAAM,CAChCG,UAAW,SAAmBC,GAE5B,OADIC,UAAUC,SAAQT,aAAaM,UAAYC,GACxCP,aAAaM,SACtB,EACAI,sBAAuB,WACrB,MAAO,CACLC,IAAK,EACLC,KAAM,EACNC,MAAOhB,OAAOC,WACdgB,OAAQjB,OAAOkB,YAEnB,IAIJX,cAAAY,SACA,CAEA,IAAIC,aAAW,EAEXA,UAGFA,aAGcpB,OAAGA,QAEnBJ,SAAAyB,iBAAA,UAAA,WAFID,aAAepB,OAAOsB,OAI1B,KATEtB,OAAEG,aAAAoB,aAAA,WACHH,aAAMpB,OAAAG,aAAAM,SACLW,IASAI,YAKI,WAJF,IAKIC,EAAUZ,SAAAA,iBAA2B,mBAHzC,GAAGa,QAKQC,KAACC,GAAUC,SAAGC,GAEvB,SAAAC,IAEAA,EAAUlB,wBAAAC,IAAAd,OAAAkB,cAAA,EAAAY,EAAAE,aAAA,IAAAF,EAAAF,UAAAK,SAAA,aAENH,EAAC/B,UAAUmC,OAAA,kBACb/B,EAAAA,UAAaoB,IAAAA,WALf,CASAQ,IAEHhC,SAGCoC,SAAaC,iBAAO,SAAAL,GAThB5B,aAAaoB,YAAYQ,EAW/BM,GACAC,GAAAA,MAHF,IAOIC,OAAI,IAAAH,OAAA,uBAAoB,CAN1BI,cAOQ,EACRH,gBAAC,EACDI,aAAY,EANZC,MAOEC,EANF7C,MAOE8C,IACFC,WAAC,CACDC,GAAAA,qBACAC,KAAQ,YALRN,WAOQ,CANNE,OAOQ,sBANRC,OAOEI,uBALJF,YAOG,EANHC,OAOQ,WANRE,eAOgB,CACdC,KAAA,CACFC,QAAA,EACAH,UAAA,CAAA,KAAA,GAAA,GANII,QAAS,GAUTC,KAAAA,CAEAC,UAAa,CAAA,OAAG,EAAhBA,OAQEC,WAAUC,SAAUtD,iBAAc,oBAExCqD,cAAcE,SAAAA,GACdF,IAAAA,EAAcH,EAAWlD,cAAA,qBAC1BsD,EAAA5B,UAAAC,IAAA,UAEDwB,EAAUK,MAAChC,UAAQ6B,EAACC,aAAc,KAChCD,EAAMI,MAAQH,QAAUtD,CAV1B,EAcI0D,eAAkBH,SAAAA,GAXpB,IAYIG,EAAAA,EAAeJ,cAAU,qBAX7BA,EAYS5B,UAAAM,OAAA,UAXTqB,EAYIF,MAAUI,UAAS,KAXvBF,EAWiCG,MAAKE,QAAAA,CAVxC,EAEAP,WAUI3B,SAAA,SAAA8B,GACF,IAACG,EAAAH,EAAAtD,cAAA,mBACDqD,EAAAC,EAAAtD,cAAA,qBAIAyD,EAAIE,QAAUjE,WACdiE,EAAQnC,MAAQ+B,UACdK,eAAOzC,IAELyC,WAAOlC,SAAUmC,SAAAA,GAAO,OAASH,eAAAJ,EAAA,IACjCF,cAAWQ,GAVf,CACF,IAGA,IAYME,aAAA,WACFpE,SAAAC,iBAAA,aACH6B,SAAA,SAAAoC,GACDE,EAAAA,iBAAc,SAAA,WACdC,QAAAC,IAAA,QACAC,EAAavC,UAAEmC,OAAA,UAXT,IAAIK,EAAON,EAAOO,cAAcC,uBAC5BF,EAAKV,MAAMD,UACbW,EAAKV,MAAMD,UAAY,KAEvBW,EAAKV,MAAMD,UAAYW,EAAKG,aAAe,IAE/C,GACF,GACF,EACAP,eAEAG","file":"script.min.js","sourcesContent":["//Init Scrollbar\r\n\r\njarallax(document.querySelectorAll('.jarallax'), {\r\n\tspeed: -0.5,\r\n});\r\n\r\nconst isMobile = window.innerWidth < 1280;\r\nif (!isMobile) {\r\n  let $app = document.querySelector('.global-wrapper');\r\n\r\n  window.appScrollBar = Scrollbar.init($app);\r\n  ScrollTrigger.scrollerProxy($app, {\r\n    scrollTop: function scrollTop(value) {\r\n      if (arguments.length) appScrollBar.scrollTop = value;\r\n      return appScrollBar.scrollTop;\r\n    },\r\n    getBoundingClientRect: function getBoundingClientRect() {\r\n      return {\r\n        top: 0,\r\n        left: 0,\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      };\r\n    }\r\n  });\r\n\r\n  ScrollTrigger.refresh();\r\n}\r\nlet scrollTopPos = 0;\r\n\r\nif (!isMobile) {\r\n  window.appScrollBar.addListener(() => {\r\n    scrollTopPos = window.appScrollBar.scrollTop;\r\n  });\r\n} else {\r\n  scrollTopPos = window.scrollY;\r\n\r\n  document.addEventListener('scroll', () => {\r\n    scrollTopPos = window.scrollY;\r\n  })\r\n}\r\n\r\n// in-view detect\r\n! function () {\r\n  setTimeout(() => {\r\n    const blocks = document.querySelectorAll('.in-view-detect');\r\n\r\n    [].forEach.call(blocks, ($item) => {\r\n\r\n      function onScroll() {\r\n        if ($item.getBoundingClientRect().top - window.innerHeight <= ($item.offsetHeight * -1) / 4 && !($item.classList.contains('in-view'))) {\r\n          $item.classList.remove('in-view-detect');\r\n          $item.classList.add('in-view');\r\n        }\r\n      }\r\n\r\n      onScroll();\r\n\r\n      if (!isMobile) {\r\n        appScrollBar.addListener(onScroll);\r\n      } else {\r\n        document.addEventListener('scroll', onScroll)\r\n      }\r\n    })\r\n  }, 1200)\r\n}();\r\n\r\n// TODO: delay before slide change\r\nlet swiper = new Swiper(\".testimonials-slider\", {\r\n  slidesPerView: 1,\r\n  centeredSlides: false,\r\n  spaceBetween: 0,\r\n  lazy: true,\r\n  speed: 1000,\r\n  pagination: {\r\n    el: \".swiper-pagination\",\r\n    type: \"fraction\",\r\n  },\r\n  navigation: {\r\n    nextEl: \".swiper-button-next\",\r\n    prevEl: \".swiper-button-prev\",\r\n  },\r\n  grabCursor: true,\r\n  effect: \"creative\",\r\n  creativeEffect: {\r\n    prev: {\r\n      shadow: false,\r\n      translate: [\"0%\", 0, -1],\r\n      opacity: 0,\r\n    },\r\n    next: {\r\n      translate: [\"100%\", 0, 0],\r\n    },\r\n  }\r\n});\r\n\r\n\r\n// faq accordion \r\nconst accordions = document.querySelectorAll(\".accordion__item\");\r\n\r\nconst openAccordion = (accordion) => {\r\n  const content = accordion.querySelector(\".accordion__panel\");\r\n  accordion.classList.add(\"active\");\r\n  content.style.maxHeight = content.scrollHeight + \"px\";\r\n  content.style.opacity = 1;\r\n};\r\n\r\nconst closeAccordion = (accordion) => {\r\n  const content = accordion.querySelector(\".accordion__panel\");\r\n  accordion.classList.remove(\"active\");\r\n  content.style.maxHeight = null;\r\n  content.style.opacity = 0;\r\n};\r\n\r\naccordions.forEach((accordion) => {\r\n  const intro = accordion.querySelector(\".accordion__btn\");\r\n  const content = accordion.querySelector(\".accordion__panel\");\r\n\r\n  intro.onclick = () => {\r\n    if (content.style.maxHeight) {\r\n      closeAccordion(accordion);\r\n    } else {\r\n      accordions.forEach((accordion) => closeAccordion(accordion));\r\n      openAccordion(accordion);\r\n    }\r\n  };\r\n});\r\n\r\n\r\nconst showMoreText = () => {\r\n  let buttons = document.querySelectorAll('.btn-more');\r\n  buttons.forEach(button => {\r\n    button.addEventListener('click', () => {\r\n      console.log('show');\r\n      button.classList.toggle('active');\r\n      let text = button.parentElement.previousElementSibling;\r\n      if (text.style.maxHeight) {\r\n        text.style.maxHeight = null;\r\n      } else {\r\n        text.style.maxHeight = text.scrollHeight + \"px\";\r\n      }\r\n    });\r\n  });\r\n};\r\nshowMoreText();\r\n// // run for sprite svg support \r\nsvg4everybody();"]}