{"version":3,"sources":["script.js"],"names":["document","addEventListener","event","jarallax","querySelectorAll","$app","querySelector","window","innerWidth","setTimeout","forEach","call","blocks","item","onScroll","classList","top","innerHeight","contains","remove","isMobile","ScrollTrigger","scrollTop","arguments","length","appScrollBar","Scrollbar","init","getBoundingClientRect","value","left","refresh","height","scrollTopPos","scrollY","$item","addListener","offsetHeight","Swiper","add","centeredSlides","nextEl","prevEl","creativeEffect","slidesPerView","spaceBetween","lazy","opacity","speed","pagination","el","translate","type","navigation","grabCursor","openAccordion","effect","content","accordion","style","closeAccordion","maxHeight","intro","showMoreText","buttons","accordions","text","button","tabLinks","i","className","parentElement","previousElementSibling","getElementById","currentTarget","tabBtns","tabBtnsSecond","tabBtn","toggleTabSecond","getAttribute","evt","cityName","tabContent","toggleTabFirst","openTabSecond","replace","e","target","svg4everybody"],"mappings":"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","file":"script.min.js","sourcesContent":["//Init Scrollbar\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  jarallax(document.querySelectorAll('.jarallax'), {\r\n    speed: -0.5,\r\n  });\r\n\r\n  let $app = document.querySelector('.global-wrapper');\r\n  const isMobile = window.innerWidth < 1280;\r\n  const mainWrapper = document.querySelector('.main-wrapper');\r\n  if (mainWrapper) {\r\n    !(function () {\r\n      setTimeout(() => {\r\n        const blocks = document.querySelectorAll('.in-view-detect');\r\n\r\n        [].forEach.call(blocks, (item) => {\r\n          function onScroll() {\r\n            if (\r\n              item.getBoundingClientRect().top - window.innerHeight <=\r\n                (item.offsetHeight * -1) / 16 &&\r\n              !item.classList.contains('in-view')\r\n            ) {\r\n              item.classList.remove('in-view-detect');\r\n              item.classList.add('in-view');\r\n            }\r\n          }\r\n          onScroll();\r\n          document.addEventListener('scroll', onScroll);\r\n        });\r\n      }, 700);\r\n    })();\r\n  }\r\n  if ($app) {\r\n    if (!isMobile) {\r\n      let $app = document.querySelector('.global-wrapper');\r\n\r\n      window.appScrollBar = Scrollbar.init($app);\r\n      ScrollTrigger.scrollerProxy($app, {\r\n        scrollTop: function scrollTop(value) {\r\n          if (arguments.length) appScrollBar.scrollTop = value;\r\n          return appScrollBar.scrollTop;\r\n        },\r\n        getBoundingClientRect: function getBoundingClientRect() {\r\n          return {\r\n            top: 0,\r\n            left: 0,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n          };\r\n        },\r\n      });\r\n\r\n      ScrollTrigger.refresh();\r\n    }\r\n    let scrollTopPos = 0;\r\n\r\n    if (!isMobile) {\r\n      window.appScrollBar.addListener(() => {\r\n        scrollTopPos = window.appScrollBar.scrollTop;\r\n      });\r\n    } else {\r\n      scrollTopPos = window.scrollY;\r\n\r\n      document.addEventListener('scroll', () => {\r\n        scrollTopPos = window.scrollY;\r\n      });\r\n    }\r\n    // in-view detect\r\n    !(function () {\r\n      setTimeout(() => {\r\n        const blocks = document.querySelectorAll('.in-view-detect');\r\n\r\n        [].forEach.call(blocks, ($item) => {\r\n          function onScroll() {\r\n            if (\r\n              $item.getBoundingClientRect().top - window.innerHeight <=\r\n                ($item.offsetHeight * -1) / 4 &&\r\n              !$item.classList.contains('in-view')\r\n            ) {\r\n              $item.classList.remove('in-view-detect');\r\n              $item.classList.add('in-view');\r\n            }\r\n          }\r\n\r\n          onScroll();\r\n\r\n          if (!isMobile) {\r\n            appScrollBar.addListener(onScroll);\r\n          } else {\r\n            document.addEventListener('scroll', onScroll);\r\n          }\r\n        });\r\n      }, 1200);\r\n    })();\r\n  }\r\n\r\n  let swiper = new Swiper('.testimonials-slider', {\r\n    slidesPerView: 1,\r\n    centeredSlides: false,\r\n    spaceBetween: 0,\r\n    lazy: true,\r\n    speed: 1000,\r\n    pagination: {\r\n      el: '.swiper-pagination',\r\n      type: 'fraction',\r\n    },\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev',\r\n    },\r\n    grabCursor: true,\r\n    effect: 'creative',\r\n    creativeEffect: {\r\n      prev: {\r\n        shadow: false,\r\n        translate: ['0%', 0, -1],\r\n        opacity: 0,\r\n      },\r\n      next: {\r\n        translate: ['100%', 0, 0],\r\n      },\r\n    },\r\n  });\r\n\r\n  // faq accordion\r\n  const accordions = document.querySelectorAll('.accordion__item');\r\n\r\n  const openAccordion = (accordion) => {\r\n    const content = accordion.querySelector('.accordion__panel');\r\n    accordion.classList.add('active');\r\n    content.style.maxHeight = content.scrollHeight + 'px';\r\n    content.style.opacity = 1;\r\n  };\r\n\r\n  const closeAccordion = (accordion) => {\r\n    const content = accordion.querySelector('.accordion__panel');\r\n    accordion.classList.remove('active');\r\n    content.style.maxHeight = null;\r\n    content.style.opacity = 0;\r\n  };\r\n\r\n  accordions.forEach((accordion) => {\r\n    const intro = accordion.querySelector('.accordion__btn');\r\n    const content = accordion.querySelector('.accordion__panel');\r\n\r\n    intro.onclick = () => {\r\n      if (content.style.maxHeight) {\r\n        closeAccordion(accordion);\r\n      } else {\r\n        accordions.forEach((accordion) => closeAccordion(accordion));\r\n        openAccordion(accordion);\r\n      }\r\n    };\r\n  });\r\n\r\n  const showMoreText = () => {\r\n    let buttons = document.querySelectorAll('.btn-more');\r\n    buttons.forEach((button) => {\r\n      button.addEventListener('click', () => {\r\n        button.classList.toggle('active');\r\n        let text = button.parentElement.previousElementSibling;\r\n        if (text.style.maxHeight) {\r\n          text.style.maxHeight = null;\r\n        } else {\r\n          text.style.maxHeight = text.scrollHeight + 'px';\r\n        }\r\n      });\r\n    });\r\n  };\r\n  showMoreText();\r\n\r\n  function openTabFirst(evt, cityName) {\r\n    let i, tabContent, tabLinks;\r\n    tabContent = document.querySelectorAll('.firstTab .tab__content');\r\n    for (i = 0; i < tabContent.length; i++) {\r\n      tabContent[i].classList.remove('active');\r\n    }\r\n    tabLinks = document.querySelectorAll('.firstTab .tab__link');\r\n    for (i = 0; i < tabLinks.length; i++) {\r\n      tabLinks[i].className = tabLinks[i].className.replace(' active', '');\r\n    }\r\n    document.getElementById(cityName).classList.add('active');\r\n    evt.currentTarget.className += ' active';\r\n  }\r\n\r\n  const tabBtns = document.querySelectorAll('.firstTab .tab__link');\r\n  const toggleTabFirst = () => {\r\n    tabBtns.forEach((tabBtn) => {\r\n      tabBtn.addEventListener('click', (e) => {\r\n        let target = e.target.getAttribute('data-href');\r\n        openTabFirst(e, target);\r\n      });\r\n    });\r\n  };\r\n  toggleTabFirst();\r\n\r\n  function openTabSecond(evt, cityName) {\r\n    let i, tabContent, tabLinks;\r\n    tabContent = document.querySelectorAll('.secondTab .tab__content');\r\n    for (i = 0; i < tabContent.length; i++) {\r\n      tabContent[i].classList.remove('active');\r\n    }\r\n    tabLinks = document.querySelectorAll('.secondTab .tab__link');\r\n    for (i = 0; i < tabLinks.length; i++) {\r\n      tabLinks[i].className = tabLinks[i].className.replace(' active', '');\r\n    }\r\n    document.getElementById(cityName).classList.add('active');\r\n    evt.currentTarget.className += ' active';\r\n  }\r\n\r\n  const tabBtnsSecond = document.querySelectorAll('.secondTab .tab__link');\r\n  const toggleTabSecond = () => {\r\n    tabBtnsSecond.forEach((tabBtn) => {\r\n      tabBtn.addEventListener('click', (e) => {\r\n        let target = e.target.getAttribute('data-href-sec');\r\n        openTabSecond(e, target);\r\n      });\r\n    });\r\n  };\r\n  toggleTabSecond();\r\n  // const tabs = document.querySelector('.product-card__footer');\r\n  // const tabButton = document.querySelectorAll('.tab__link');\r\n  // const contents = document.querySelectorAll('.tab__content');\r\n\r\n  // tabs.onclick = (e) => {\r\n  //   const id = e.target.dataset.id;\r\n  //   if (id) {\r\n  //     tabButton.forEach((btn) => {\r\n  //       btn.classList.remove('active');\r\n  //     });\r\n  //     e.target.classList.add('active');\r\n\r\n  //     contents.forEach((content) => {\r\n  //       content.classList.remove('active');\r\n  //     });\r\n  //     const element = document.getElementById(id);\r\n  //     element.classList.add('active');\r\n  //   }\r\n  // };\r\n  // // run for sprite svg support\r\n  svg4everybody();\r\n});\r\n"]}