{"version":3,"sources":["script.js"],"names":["jarallax","document","querySelectorAll","speed","isMobile","window","innerWidth","querySelector","appScrollBar","Scrollbar","init","$app","ScrollTrigger","scrollerProxy","scrollTop","value","arguments","length","getBoundingClientRect","top","left","width","height","innerHeight","refresh","scrollTopPos","addEventListener","scrollY","addListener","setTimeout","blocks","forEach","call","classList","add","$item","onScroll","offsetHeight","swiper","centeredSlides","spaceBetween","el","type","nextEl","Swiper","slidesPerView","grabCursor","effect","creativeEffect","pagination","shadow","translate","navigation","next","prevEl","prev","accordions","openAccordion","content","style","opacity","accordion","intro","onclick","maxHeight","scrollHeight","closeAccordion","remove","showMoreText","buttons","button","openTabFirst","tabContent","previousElementSibling","text","tabLinks","i","className","replace","evt","cityName","tabBtn","target","toggleTabFirst","openTabSecond","currentTarget","tabBtns","e","getElementById","getAttribute","tabBtnsSecond","toggleTabSecond","svg4everybody"],"mappings":"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","file":"script.min.js","sourcesContent":["//Init Scrollbar\r\n\r\njarallax(document.querySelectorAll('.jarallax'), {\r\n  speed: -0.5,\r\n});\r\n\r\nconst isMobile = window.innerWidth < 1280;\r\nif (!isMobile) {\r\n  let $app = document.querySelector('.global-wrapper');\r\n\r\n  window.appScrollBar = Scrollbar.init($app);\r\n  ScrollTrigger.scrollerProxy($app, {\r\n    scrollTop: function scrollTop(value) {\r\n      if (arguments.length) appScrollBar.scrollTop = value;\r\n      return appScrollBar.scrollTop;\r\n    },\r\n    getBoundingClientRect: function getBoundingClientRect() {\r\n      return {\r\n        top: 0,\r\n        left: 0,\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      };\r\n    },\r\n  });\r\n\r\n  ScrollTrigger.refresh();\r\n}\r\nlet scrollTopPos = 0;\r\n\r\nif (!isMobile) {\r\n  window.appScrollBar.addListener(() => {\r\n    scrollTopPos = window.appScrollBar.scrollTop;\r\n  });\r\n} else {\r\n  scrollTopPos = window.scrollY;\r\n\r\n  document.addEventListener('scroll', () => {\r\n    scrollTopPos = window.scrollY;\r\n  });\r\n}\r\n\r\n// in-view detect\r\n!(function () {\r\n  setTimeout(() => {\r\n    const blocks = document.querySelectorAll('.in-view-detect');\r\n\r\n    [].forEach.call(blocks, ($item) => {\r\n      function onScroll() {\r\n        if (\r\n          $item.getBoundingClientRect().top - window.innerHeight <=\r\n            ($item.offsetHeight * -1) / 4 &&\r\n          !$item.classList.contains('in-view')\r\n        ) {\r\n          $item.classList.remove('in-view-detect');\r\n          $item.classList.add('in-view');\r\n        }\r\n      }\r\n\r\n      onScroll();\r\n\r\n      if (!isMobile) {\r\n        appScrollBar.addListener(onScroll);\r\n      } else {\r\n        document.addEventListener('scroll', onScroll);\r\n      }\r\n    });\r\n  }, 1200);\r\n})();\r\n\r\nlet swiper = new Swiper('.testimonials-slider', {\r\n  slidesPerView: 1,\r\n  centeredSlides: false,\r\n  spaceBetween: 0,\r\n  lazy: true,\r\n  speed: 1000,\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n    type: 'fraction',\r\n  },\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n  },\r\n  grabCursor: true,\r\n  effect: 'creative',\r\n  creativeEffect: {\r\n    prev: {\r\n      shadow: false,\r\n      translate: ['0%', 0, -1],\r\n      opacity: 0,\r\n    },\r\n    next: {\r\n      translate: ['100%', 0, 0],\r\n    },\r\n  },\r\n});\r\n\r\n// faq accordion\r\nconst accordions = document.querySelectorAll('.accordion__item');\r\n\r\nconst openAccordion = (accordion) => {\r\n  const content = accordion.querySelector('.accordion__panel');\r\n  accordion.classList.add('active');\r\n  content.style.maxHeight = content.scrollHeight + 'px';\r\n  content.style.opacity = 1;\r\n};\r\n\r\nconst closeAccordion = (accordion) => {\r\n  const content = accordion.querySelector('.accordion__panel');\r\n  accordion.classList.remove('active');\r\n  content.style.maxHeight = null;\r\n  content.style.opacity = 0;\r\n};\r\n\r\naccordions.forEach((accordion) => {\r\n  const intro = accordion.querySelector('.accordion__btn');\r\n  const content = accordion.querySelector('.accordion__panel');\r\n\r\n  intro.onclick = () => {\r\n    if (content.style.maxHeight) {\r\n      closeAccordion(accordion);\r\n    } else {\r\n      accordions.forEach((accordion) => closeAccordion(accordion));\r\n      openAccordion(accordion);\r\n    }\r\n  };\r\n});\r\n\r\nconst showMoreText = () => {\r\n  let buttons = document.querySelectorAll('.btn-more');\r\n  buttons.forEach((button) => {\r\n    button.addEventListener('click', () => {\r\n      button.classList.toggle('active');\r\n      let text = button.parentElement.previousElementSibling;\r\n      if (text.style.maxHeight) {\r\n        text.style.maxHeight = null;\r\n      } else {\r\n        text.style.maxHeight = text.scrollHeight + 'px';\r\n      }\r\n    });\r\n  });\r\n};\r\nshowMoreText();\r\n\r\nfunction openTabFirst(evt, cityName) {\r\n  let i, tabContent, tabLinks;\r\n  tabContent = document.querySelectorAll('.firstTab .tab__content');\r\n  for (i = 0; i < tabContent.length; i++) {\r\n    tabContent[i].classList.remove('active');\r\n  }\r\n  tabLinks = document.querySelectorAll('.firstTab .tab__link');\r\n  for (i = 0; i < tabLinks.length; i++) {\r\n    tabLinks[i].className = tabLinks[i].className.replace(' active', '');\r\n  }\r\n  document.getElementById(cityName).classList.add('active');\r\n  evt.currentTarget.className += ' active';\r\n}\r\n\r\nconst tabBtns = document.querySelectorAll('.firstTab .tab__link');\r\nconst toggleTabFirst = () => {\r\n  tabBtns.forEach((tabBtn) => {\r\n    tabBtn.addEventListener('click', (e) => {\r\n      let target = e.target.getAttribute('data-href');\r\n      openTabFirst(e, target);\r\n    });\r\n  });\r\n};\r\ntoggleTabFirst();\r\n\r\nfunction openTabSecond(evt, cityName) {\r\n  let i, tabContent, tabLinks;\r\n  tabContent = document.querySelectorAll('.secondTab .tab__content');\r\n  for (i = 0; i < tabContent.length; i++) {\r\n    tabContent[i].classList.remove('active');\r\n  }\r\n  tabLinks = document.querySelectorAll('.secondTab .tab__link');\r\n  for (i = 0; i < tabLinks.length; i++) {\r\n    tabLinks[i].className = tabLinks[i].className.replace(' active', '');\r\n  }\r\n  document.getElementById(cityName).classList.add('active');\r\n  evt.currentTarget.className += ' active';\r\n}\r\n\r\nconst tabBtnsSecond = document.querySelectorAll('.secondTab .tab__link');\r\nconst toggleTabSecond = () => {\r\n  tabBtnsSecond.forEach((tabBtn) => {\r\n    tabBtn.addEventListener('click', (e) => {\r\n      let target = e.target.getAttribute('data-href-sec');\r\n      openTabSecond(e, target);\r\n    });\r\n  });\r\n};\r\ntoggleTabSecond();\r\n// const tabs = document.querySelector('.product-card__footer');\r\n// const tabButton = document.querySelectorAll('.tab__link');\r\n// const contents = document.querySelectorAll('.tab__content');\r\n\r\n// tabs.onclick = (e) => {\r\n//   const id = e.target.dataset.id;\r\n//   if (id) {\r\n//     tabButton.forEach((btn) => {\r\n//       btn.classList.remove('active');\r\n//     });\r\n//     e.target.classList.add('active');\r\n\r\n//     contents.forEach((content) => {\r\n//       content.classList.remove('active');\r\n//     });\r\n//     const element = document.getElementById(id);\r\n//     element.classList.add('active');\r\n//   }\r\n// };\r\n// // run for sprite svg support\r\nsvg4everybody();\r\n"]}